## Author: Jeffrey Guan
## Name: lenovo.hot.yaml
## Date: 2016-08-15
## Note: create resource groups.
## Version: Kilo

heat_template_version: '2015-04-30'

description: HOT template 

parameters:
  system_name:
    type: string
    default: "dev_openstack"
  cpu_node_count:
    description: 'Number of compute nodes to create'
    type: number
    default: 1
  ctrl_node_count:
    type: number
    description: 'Number of controller nodes to create'
    constraints: 
      - range: { min: 1, max: 1 }
  image:
    type: json 
    default: 
      {
        "cpu_image": "cirros",
        "ctrl_image": "cirros"
      }
  flavor:
    type: json 
    default: 
      {
        "cpu_flavor": "m1.small",
        "ctrl_flavor": "m1.small"
      }
  cpu_volume_size:
    type: string
    default: 1
  ctrl_volume_size:
    type: string
    default: 1
  net04_ext_net_cfg:
    type: json 
  br_fw_admin_net_cfg:
    type: json 
  br_storage_net_cfg:
    type: json 
  br_mgmt_net_cfg:
    type: json 
  br_mesh_net_cfg:
    type: json 
  floating_network_id:
    type: string
    default: "07cb6722-6986-4aba-8f4f-1a0556e51362"

resources:

  # Create compute node.
  Lenovo-Compute-Group:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: cpu_node_count }
      resource_def:
        type: Lenovo::ComputeNode
        properties:
          name:
            str_replace:
              template: $system_name-cpu-host-%index%
              params:
                $system_name: { get_param: system_name }

          image: { get_param: [image, cpu_image] }
          flavor: { get_param: [flavor, cpu_flavor] } 
          volumeSize: { get_param: cpu_volume_size }
          
          br-fw-admin-network_id: { get_param: [br_fw_admin_net_cfg, network_id] }
          br-storage-network_id: { get_param: [br_storage_net_cfg, network_id] }
          br-mgmt-network_id: { get_param: [br_mgmt_net_cfg, network_id] }
          br-mesh-network_id: { get_param: [br_mesh_net_cfg, network_id] }
          
          user_data:
            str_replace:
              template: { get_file: userdata_compute_node.sh }
              params:
                $node_countA: { get_param: cpu_node_count }

  # Create controller node.
  Lenovo-Controller-Group:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: ctrl_node_count }
      resource_def:
        type: Lenovo::ControllerNode
        properties:
          name:
            str_replace:
              #template: $system_name-ctrl-node-%index%
              template: $system_name-ctrl-node-378
              params:
                $system_name: { get_param: system_name }

          image: { get_param: [image, ctrl_image] }
          flavor: { get_param: [flavor, ctrl_flavor] } 
          volumeSize: { get_param: ctrl_volume_size }
          
          br-fw-admin-network_id: { get_param: [br_fw_admin_net_cfg, network_id] }
          br-storage-network_id: { get_param: [br_storage_net_cfg, network_id] }
          net04-ext-network_id: { get_param: [net04_ext_net_cfg, network_id] }
          br-mgmt-network_id: { get_param: [br_mgmt_net_cfg, network_id] }
          br-mesh-network_id: { get_param: [br_mesh_net_cfg, network_id] }
          
          net04-ext_subnet_id: { get_param: [net04_ext_net_cfg, subnet_id] }
          
          br-fw-admin_ipaddress: { get_param: [br_fw_admin_net_cfg, ctrl_fixed_ip] }
          br-storage_ipaddress: { get_param: [br_storage_net_cfg, ctrl_fixed_ip] }
          net04-ext_ipaddress1: { get_param: [net04_ext_net_cfg, ctrl_fixed_ip1] }
          net04-ext_ipaddress2: { get_param: [net04_ext_net_cfg, ctrl_fixed_ip2] }
          br-mgmt_ipaddress: { get_param: [br_mgmt_net_cfg, ctrl_fixed_ip] }
          br-mesh_ipaddress: { get_param: [br_mesh_net_cfg, ctrl_fixed_ip] }          
          
          #floating_network_id: { get_param: floating_network_id }

          user_data:
            str_replace:
              template: { get_file: userdata_controller_node.sh }
              params:
                $DEFAULT_GATEWAY: { get_param: ctrl_node_count }
#outputs:

